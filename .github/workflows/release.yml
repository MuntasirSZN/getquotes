name: 🚀 Release Builds and Publish
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
jobs:
  test:
    uses: ./.github/workflows/test-code.yaml
    name: 🧪 Test Code
  build:
    name: 💠 Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-linux-android
            os: ubuntu-latest
    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v3
      - name: ⚙️ Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
          components: rustfmt, clippy
      - name: 🤖 Setup Android build environment
        if: matrix.target == 'aarch64-linux-android'
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip android-ndk-r25c-linux.zip
          echo "ANDROID_NDK_HOME=$PWD/android-ndk-r25c" >> $GITHUB_ENV
          rustup target add aarch64-linux-android
          echo "CC_aarch64_linux_android=$PWD/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=$PWD/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
      - name: 🛠️ Build for Android
        if: matrix.target == 'aarch64-linux-android'
        run: |
          cargo build --target aarch64-linux-android --release
        env:
          CC: ${{ env.CC_aarch64_linux_android }}
          AR: ${{ env.ANDROID_NDK_HOME }}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
      - name: 🛠️ Build for Windows
        if: contains(matrix.target, 'windows')
        shell: pwsh
        run: |
          cargo build --target ${{ matrix.target }} --release
      - name: 🛠️ Build for Unix
        if: "!contains(matrix.target, 'windows') && matrix.target != 'aarch64-linux-android'"
        run: |
          cargo build --target ${{ matrix.target }} --release
      - name: 📁 Package binary (Windows)
        if: contains(matrix.target, 'windows')
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release
          Copy-Item "target/${{ matrix.target }}/release/getquotes.exe" -Destination "release/getquotes-${{ matrix.target }}.exe"
          # Archive for Windows
          Compress-Archive -Path "release/getquotes-${{ matrix.target }}.exe", "man/getquotes.ps1xml", "LICENSE" -DestinationPath "release/getquotes-${{ matrix.target }}.zip"
      - name: 📁 Package binary (Unix)
        if: "!contains(matrix.target, 'windows')"
        shell: bash
        run: |
          mkdir -p release
          cp "target/${{ matrix.target }}/release/getquotes" "release/getquotes-${{ matrix.target }}"
          # Archive for Unix
          tar -czvf "release/getquotes-${{ matrix.target }}.tar.gz" -C release "getquotes-${{ matrix.target }}" -C ../ "man/getquotes.1" "LICENSE"
      - name: 📤 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: getquotes-${{ matrix.target }}
          path: release/getquotes-${{ matrix.target }}.*
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: "main"
      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: 🏷️ Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: 🗿 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false
          files: |
            artifacts/getquotes-x86_64-unknown-linux-gnu/getquotes-x86_64-unknown-linux-gnu.tar.gz
            artifacts/getquotes-x86_64-apple-darwin/getquotes-x86_64-apple-darwin.tar.gz
            artifacts/getquotes-aarch64-apple-darwin/getquotes-aarch64-apple-darwin.tar.gz
            artifacts/getquotes-x86_64-pc-windows-gnu/getquotes-x86_64-pc-windows-gnu.zip
            artifacts/getquotes-x86_64-pc-windows-msvc/getquotes-x86_64-pc-windows-msvc.zip
            artifacts/getquotes-aarch64-linux-android/getquotes-aarch64-linux-android.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: 📦 Release To crates.io
        run: |
          rm -rf artifacts/
          cargo publish --allow-dirty --token ${{ secrets.CRATES_IO_TOKEN }}
      - name: 🔒 Update PKGBUILD pkgver
        run: |
          cd ci
          ./pkgbuild-ci.sh
          cd ..
      - name: 💠 Publish To Aur
        uses: KSXGitHub/github-actions-deploy-aur@v3.0.1
        with:
          pkgname: getquotes
          pkgbuild: ./packages/aur/getquotes/PKGBUILD
          updpkgsums: true
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Update AUR package
          ssh_keyscan_types: rsa,ecdsa,ed25519
      - name: 💱 Generate Changelog
        run: |
          docker pull quay.io/git-chglog/git-chglog:latest
          docker run -v "$PWD":/workdir quay.io/git-chglog/git-chglog -o CHANGELOG.md
      - name: 💫 Commit Changelog And PKGBUILD
        uses: EndBug/add-and-commit@v9
        with:
          add: "CHANGELOG.md packages/aur/getquotes/PKGBUILD"
          message: "📝 Update CHANGELOG.md And PKGBUILD"
